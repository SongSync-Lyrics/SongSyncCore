"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _chord_pro_peg_parser = _interopRequireDefault(require("./chord_pro_peg_parser"));

var _chord_sheet_serializer = _interopRequireDefault(require("../chord_sheet_serializer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Parses a ChordPro chord sheet
 */
var ChordProParser = /*#__PURE__*/function () {
  function ChordProParser() {
    _classCallCheck(this, ChordProParser);
  }

  _createClass(ChordProParser, [{
    key: "parse",
    value:
    /**
     * Parses a ChordPro chord sheet into a song
     * @param {string} chordProChordSheet the ChordPro chord sheet
     * @returns {Song} The parsed song
     */
    function parse(chordProChordSheet) {
      /**
       * All warnings raised during parsing the ChordPro chord sheet
       * @member
       * @type {Array<ParserWarning>}
       */
      var ast = _chord_pro_peg_parser["default"].parse(chordProChordSheet);

      this.song = new _chord_sheet_serializer["default"]().deserialize(ast);
      return this.song;
    }
    /**
     * All warnings raised during parsing the ChordPro chord sheet
     * @member
     * @type {ParserWarning[]}
     */

  }, {
    key: "warnings",
    get: function get() {
      return this.song.warnings;
    }
  }]);

  return ChordProParser;
}();

var _default = ChordProParser;
exports["default"] = _default;