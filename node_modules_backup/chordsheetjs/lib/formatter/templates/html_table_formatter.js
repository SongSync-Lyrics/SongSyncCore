"use strict";

var Handlebars = require("handlebars");

var template = Handlebars.template,
    templates = Handlebars.templates = Handlebars.templates || {};
templates['html_table_formatter'] = template({
  "1": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return ((stack1 = lookupProperty(helpers, "if").call(alias1, depth0 != null ? lookupProperty(depth0, "title") : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(2, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 2,
          "column": 2
        },
        "end": {
          "line": 4,
          "column": 11
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, depth0 != null ? lookupProperty(depth0, "subtitle") : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(4, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 6,
          "column": 2
        },
        "end": {
          "line": 8,
          "column": 11
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, depth0 != null ? lookupProperty(depth0, "bodyLines") : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(6, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 52,
          "column": 11
        }
      }
    })) != null ? stack1 : "");
  },
  "2": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<h1>" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "title") || (depth0 != null ? lookupProperty(depth0, "title") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "title",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 3,
          "column": 8
        },
        "end": {
          "line": 3,
          "column": 19
        }
      }
    }) : helper)) + "</h1>";
  },
  "4": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<h2>" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "subtitle") || (depth0 != null ? lookupProperty(depth0, "subtitle") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "subtitle",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 7,
          "column": 8
        },
        "end": {
          "line": 7,
          "column": 22
        }
      }
    }) : helper)) + "</h2>";
  },
  "6": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<div class=\"chord-sheet\">" + ((stack1 = lookupProperty(helpers, "each").call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? lookupProperty(depth0, "bodyParagraphs") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(7, data, 1, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 12,
          "column": 6
        },
        "end": {
          "line": 50,
          "column": 17
        }
      }
    })) != null ? stack1 : "") + "</div>";
  },
  "7": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<div class=\"" + container.escapeExpression(lookupProperty(helpers, "paragraphClasses").call(alias1, blockParams[0][0], {
      "name": "paragraphClasses",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 13,
          "column": 20
        },
        "end": {
          "line": 13,
          "column": 50
        }
      }
    })) + "\">" + ((stack1 = lookupProperty(helpers, "each").call(alias1, depth0 != null ? lookupProperty(depth0, "lines") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(8, data, 1, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 14,
          "column": 10
        },
        "end": {
          "line": 48,
          "column": 21
        }
      }
    })) != null ? stack1 : "") + "</div>";
  },
  "8": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "if").call(alias1, lookupProperty(helpers, "shouldRenderLine").call(alias1, blockParams[0][0], {
      "name": "shouldRenderLine",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 15,
          "column": 19
        },
        "end": {
          "line": 15,
          "column": 42
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(9, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 15,
          "column": 12
        },
        "end": {
          "line": 47,
          "column": 21
        }
      }
    })) != null ? stack1 : "";
  },
  "9": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<table class=\"" + container.escapeExpression(lookupProperty(helpers, "lineClasses").call(alias1, blockParams[1][0], {
      "name": "lineClasses",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 16,
          "column": 28
        },
        "end": {
          "line": 16,
          "column": 48
        }
      }
    })) + "\">" + ((stack1 = lookupProperty(helpers, "if").call(alias1, lookupProperty(helpers, "hasChordContents").call(alias1, blockParams[1][0], {
      "name": "hasChordContents",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 17,
          "column": 23
        },
        "end": {
          "line": 17,
          "column": 46
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(10, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 17,
          "column": 16
        },
        "end": {
          "line": 25,
          "column": 25
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, (lookupProperty(helpers, "hasTextContents") || depth0 && lookupProperty(depth0, "hasTextContents") || container.hooks.helperMissing).call(alias1, blockParams[1][0], {
      "name": "hasTextContents",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 27,
          "column": 23
        },
        "end": {
          "line": 27,
          "column": 45
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(14, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 27,
          "column": 16
        },
        "end": {
          "line": 45,
          "column": 25
        }
      }
    })) != null ? stack1 : "") + "</table>";
  },
  "10": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<tr>" + ((stack1 = lookupProperty(helpers, "each").call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? lookupProperty(depth0, "items") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(11, data, 1, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 19,
          "column": 20
        },
        "end": {
          "line": 23,
          "column": 31
        }
      }
    })) != null ? stack1 : "") + "</tr>";
  },
  "11": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "if").call(alias1, lookupProperty(helpers, "isChordLyricsPair").call(alias1, blockParams[0][0], {
      "name": "isChordLyricsPair",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 20,
          "column": 29
        },
        "end": {
          "line": 20,
          "column": 53
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(12, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 20,
          "column": 22
        },
        "end": {
          "line": 22,
          "column": 31
        }
      }
    })) != null ? stack1 : "";
  },
  "12": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<td class=\"chord\">" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "chords") || (depth0 != null ? lookupProperty(depth0, "chords") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "chords",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 21,
          "column": 42
        },
        "end": {
          "line": 21,
          "column": 52
        }
      }
    }) : helper)) + "</td>";
  },
  "14": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<tr>" + ((stack1 = lookupProperty(helpers, "each").call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? lookupProperty(depth0, "items") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(15, data, 1, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 29,
          "column": 20
        },
        "end": {
          "line": 43,
          "column": 31
        }
      }
    })) != null ? stack1 : "") + "</tr>";
  },
  "15": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return ((stack1 = lookupProperty(helpers, "if").call(alias1, lookupProperty(helpers, "isChordLyricsPair").call(alias1, blockParams[0][0], {
      "name": "isChordLyricsPair",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 30,
          "column": 29
        },
        "end": {
          "line": 30,
          "column": 53
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(16, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 30,
          "column": 22
        },
        "end": {
          "line": 32,
          "column": 31
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, lookupProperty(helpers, "isTag").call(alias1, blockParams[0][0], {
      "name": "isTag",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 34,
          "column": 29
        },
        "end": {
          "line": 34,
          "column": 41
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(18, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 34,
          "column": 22
        },
        "end": {
          "line": 38,
          "column": 31
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, (lookupProperty(helpers, "isEvaluatable") || depth0 && lookupProperty(depth0, "isEvaluatable") || container.hooks.helperMissing).call(alias1, blockParams[0][0], {
      "name": "isEvaluatable",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 40,
          "column": 29
        },
        "end": {
          "line": 40,
          "column": 49
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(21, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 40,
          "column": 22
        },
        "end": {
          "line": 42,
          "column": 31
        }
      }
    })) != null ? stack1 : "");
  },
  "16": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<td class=\"lyrics\">" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "lyrics") || (depth0 != null ? lookupProperty(depth0, "lyrics") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "lyrics",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 31,
          "column": 43
        },
        "end": {
          "line": 31,
          "column": 53
        }
      }
    }) : helper)) + "</td>";
  },
  "18": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "if").call(alias1, lookupProperty(helpers, "isComment").call(alias1, blockParams[1][0], {
      "name": "isComment",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 35,
          "column": 31
        },
        "end": {
          "line": 35,
          "column": 47
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(19, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 35,
          "column": 24
        },
        "end": {
          "line": 37,
          "column": 33
        }
      }
    })) != null ? stack1 : "";
  },
  "19": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<td class=\"comment\">" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "value") || (depth0 != null ? lookupProperty(depth0, "value") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "value",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 36,
          "column": 46
        },
        "end": {
          "line": 36,
          "column": 55
        }
      }
    }) : helper)) + "</td>";
  },
  "21": function _(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<td class=\"lyrics\">" + container.escapeExpression((lookupProperty(helpers, "evaluate") || depth0 && lookupProperty(depth0, "evaluate") || container.hooks.helperMissing).call(depth0 != null ? depth0 : container.nullContext || {}, blockParams[1][0], (stack1 = depths[4] != null ? lookupProperty(depths[4], "song") : depths[4]) != null ? lookupProperty(stack1, "metadata") : stack1, {
      "name": "evaluate",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 41,
          "column": 43
        },
        "end": {
          "line": 41,
          "column": 86
        }
      }
    })) + "</td>";
  },
  "compiler": [8, ">= 4.3.0"],
  "main": function main(container, depth0, helpers, partials, data, blockParams, depths) {
    var stack1,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "with").call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? lookupProperty(depth0, "song") : depth0, {
      "name": "with",
      "hash": {},
      "fn": container.program(1, data, 0, blockParams, depths),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 11
        }
      }
    })) != null ? stack1 : "";
  },
  "useData": true,
  "useDepths": true,
  "useBlockParams": true
});